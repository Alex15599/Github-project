server:
  session:
    # session超时间时间
    timeout: 12000s
  servlet:
    session:
      # 会话超时时间，如 30s , 20m 等
      timeout: 12000s
  # 应用web访问端口,可按照实际情况进行修改
  port: 8089

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: service-all
    description: Foxnic Web Service All
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  datasource:
    # Druid 监控 , 访问 ${url-prefix}/login.html
    monitor:
      url-prefix: druid
      username: root
      password: root
      # allow: 192.168.33.108,127.0.0.1
      # deny: 192.168.1.73
      resetEnable: true
    druid:
      primary:
        # 数据库连接信息url,username,password三个属性是否加密，如果enable为true，则加密，加密因子从file指定的路径获取
        # 加密文件在 develop.encrypt 配置
        encrypt: true
        # 8.x
        #driver-class-name: com.mysql.cj.jdbc.Driver
        # 5.x
        driver-class-name: com.mysql.jdbc.Driver
        url: ai+mCm8asbK9SNrQDk7ac29neidjdgHp2jFU7HYbZZM7XPIVnc3jn040SCi2ghsOJmvzo7Z8DsMWz0GJtHzk5fVkSVq8PVTLpt97W7e4//KN1tJ8luj3f2R4xGk6d01pnyaG7DyU2tsIMcGZTOl8T0kLJom6Izu9ePptW1UPa7MuTPWKDKUSCYKdQSv51ASxJE99hLodGgxEtGeRBhnlDigwekNCLkMQGvjVKTeDRDsro2ghN1qDTzmyCaGJQxMq
        username: tD5wkJAfnCt04A+Y+QN5GA==
        password: ODGx5F84xpWJgfRFnzAaYhViHJqrTO3uxxDZ2lRlZNk=
#        url: jdbc:mysql://121.43.103.102:3306/foxnic?tinyInt1isBit=false&useSSL=false&serverTimezone=Hongkong&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowPublicKeyRetrieval=true
#        username: root
#        password: P@ss
        # 启动程序时，在连接池中初始化多少个连接
        initialSize: 10
        # 连接池中最多支持多少个活动会话
        maxActive: 128
        # 程序向连接池中请求连接时,超过maxWait的值后，认为本次请求失败，即连接池没有可用连接，单位毫秒，设置-1时表示无限等待
        maxWait: 3000
        # 池中某个连接的空闲时长达到 N 毫秒后, 连接池在下次检查空闲连接时，将回收该连接,要小于防火墙超时设置
        minEvictableIdleTimeMillis: 30000
        # 检查空闲连接的频率，单位毫秒, 非正整数时表示不进行检查程序没有close连接且空闲时长超过 minEvictableIdleTimeMillis,则会执行validationQuery指定的SQL,以保证该程序连接不会池kill掉,其范围不超过minIdle指定的连接个数。
        timeBetweenEvictionRunsMillis: 10000
        # 回收空闲连接时，将保证至少有minIdle个连接.
        minIdle: 8
        # 要求程序从池中get到连接后, N 秒后必须close,否则druid 会强制回收该连接,不管该连接中是活动还是空闲。
        removeAbandoned: false
        # 设置druid 强制回收连接的时限，当程序从池中get到连接开始算起，超过此值后，druid将强制回收该连接，单位秒。
        removeAbandonedTimeout: 86400000
        # 当druid强制回收连接后，是否将stack trace 记录到日志中
        logAbandoned: true
        # 当程序请求连接，池在分配连接时，是否先检查该连接是否有效。(高效)
        testWhileIdle: true
        # 用来保持连接有效性的，只有空闲时间大于keepAliveBetweenTimeMillis并且小于minEvictableIdleTimeMillis该参数才会有用
        keepAlive: true
        # 检查池中的连接是否仍可用的 SQL 语句,drui会连接到数据库执行该SQL, 如果正常返回，则表示连接可用，否则表示连接不可用
        validationQuery: select 1
        # 程序 申请 连接时,进行连接有效性检查（低效，影响性能）
        testOnBorrow: false
        # 程序 返还 连接时,进行连接有效性检查（低效，影响性能）
        testOnReturn: false
        # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
        poolPreparedStatements: false
        # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
        maxOpenPreparedStatements: -1
        # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
        maxPoolPreparedStatementPerConnectionSize: -1
        # 是否打印语句，生产环境建议关闭
        printSQL: true
        # 是否使用简单模式输出日志
        printSQLSimple: true
        # 是否输出调用栈
        printSQLCallstack: false
  thymeleaf:
    prefix: classpath:/public/
    check-template-location: true
    suffix: .html
    encoding: UTF-8
    content-type: text/html
    mode: HTML5
    cache: false
  session:
    # 使用外部存储 SESSION ，可以是：NONE、HAZELCAST、JDBC、MONGODB、REDIS，目前仅支持 REDIS
    store-type: NONE
  redis:
    # 是否启用单节点的 redis
    enable: false
    pool:
      #连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      #连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      #连接池中的最大空闲连接
      max-idle: 8
      #连接池中的最小空闲连接
      min-idle: 0
      #连接超时时间（毫秒）
      timeout: 30000
    # 单节配置
    port: 6379
    # redis地址
    host: 192.168.80.63
    password: asdf@123
    database: 13
    # 哨兵配置
    sentinel:
      # 是否启用哨兵模式的 redis
      enable: false
      master: common
      nodes: 192.168.1.84:26379,192.168.1.85:26379
    #集群配置
    cluster:
      # 是否启用集群模式的 redis
      enable: false
      nodes: 192.168.1.24:6389,192.168.1.24:6479,192.168.1.24:6579


foxnic:
  api:
    log-enable: true
  config:
    # 按顺序读取 profile 下的配置值，默认使用 default Profile 的配置值，如果位于靠前的 profile 已经有配置，则不再往后读取，即前面 profile 的覆盖后面的 profile ;
    profiles: default
    # 按模块控制菜单呈现，注意在开发环境下，此配置无效。
    module-authorities:
      # 指定最顶层菜单的权限Key，用逗号分隔；若未指定值则忽略该规则，不做控制。
      ########################  public key list  ####################
      #kb,hrm,bpm-mgr,auto_perm,changes,hr,basic_permissions,common_system,docs,sys_file:mngr,data_backup,pcm,oauth,public_resource,bpm,mobile_application,dp_rule:mngr,system_config,sys_tpl_file:mngr,job
      ########################  eam key list  #######################
      #eam,infrastructure,eam_employee,eam_equipment_mgr
      ########################  ops key list  #######################
      #ops,zbx
      ########################  contract key list  ##################
      #contract
      ########################  wms key list  #######################
      #wms
      ########################  kb key list  #######################
      #kb
      auth-keys:
      #auth-keys:
      # 是否在首页体现 module-authorities 控制
      apply-index-page: true
      # 是否在菜单树体现 module-authorities 控制，主要包括菜单管理、角色选择等。注意，此项若开启可能导致菜单权限勾选不全，建议仅在生产环境开启。
      apply-menu-tree: false
  # 设置 API 接口
  job:
    enable: true
    force-run-job-ids:
    # 指定 Quartz 使用的DAO数据源
    dao-bean-name: primaryDAO
    # 容许的最大作业延长时间，超出则认为 misfire 发生，单位毫秒
    misfire-threshold: 1000
    # 日志保留天数
    log-keep-days: 30
  storage:
    mode: disk
    # 是否加密配置，加密文件在 develop.encrypt 配置
    encrypt: true
    disk:
      location:
        #在不同的环境下选择不同的路径
        windows: c:/uploads
        mac: /Users/Shared/upload
        linux: /app/app/app/app/upload
    oss-aliyun:
      access-key-Id: WwzbiM7QkNGkw9X0tPA/tJcb9HFyBWtXZh+1Jd0h/zA=
      access-secret: UCYyxDXhItJRZFMApz9cZh45oUPTijVfwycIGpXnj0M=
      end-point: oGiGbQZSuB91rdrCSBfAh8EYYtdKG95securityf2wiI3LdVD98=
      public-bucket: KblbYnUiyWSxvKrTtmmVWg==
      private-bucket: 6ptaLbXYSHWjCGFbLZckLA==
  # 设置 BPM 相关内容
  bpm:
    enable: true
    debug:
      enable: true
      process-definition-code-list: eam_asset_purchase_apply,eam_asset_employee_apply,eam_asset_employee_handover,eam_asset_employee_loss,eam_asset_employee_repair,eam_asset_storage,eam_asset_tranfer,eam_asset_allocate,eam_asset_borrow,eam_asset_scrap,eam_asset_collection,eam_asset_repair_order,eam_asset_collection_return,wo_server_apply,wo_network_strategy_apply,wo_slb_strategy_appl
  # 设置 Join 的二级缓存
  cache:
    # 默认配置
    default:
      # local,remote,both,none
      mode: local
      # 本地缓存配置 : 最大元素个数
      local-limit: 10240
      # 本地缓存配置 : 本地缓存超时时长；-1 表示用不过期
      local-expire: 1200000
      # 远程缓存配置 :  超时 20 分钟，单位毫秒; -1 表示用不过期
      remote-expire: 1200000
    # 按实体类型配置缓存细节
    details:
      "org.github.foxnic.web.domain.system.Config":
        strategy:
          by-code:
            is-accurate: true
            cache-empty-result: true
            properties: code
      "org.github.foxnic.web.domain.oauth.Resourze":
        #mode: local
        local-limit: 10240
        local-expire: 1200000
        remote-expire: 1200000
      "org.github.foxnic.web.domain.system.DictItem":
        #mode: local
        local-limit: 10240
        local-expire: 1200000
        remote-expire: 1200000
        strategy:
          query-list:
            is-accurate: true
            cache-empty-result: true
            properties: dictCode
          query-code:
            is-accurate: true
            cache-empty-result: true
            properties: dictCode,code
      "org.github.foxnic.web.domain.system.DbCache":
        #mode: local
        local-limit: 10240
        local-expire: 1200000
        remote-expire: 1200000
        strategy:
          query-list:
            is-accurate: true
            cache-empty-result: true
            properties: area,catalog,ownerType,ownerId
      "org.github.foxnic.web.domain.pcm.Catalog":
        #mode: local
        local-limit: 10240
        local-expire: 1200000
        remote-expire: 1200000
  # 配置集群节点简单替代注册中心，如果启用微服务，则一下配置无效
  cluster:
    # 节点间用于通信的 key，各节点要保持一致
    key: FOXNIC-EAM-202200701-3386
    service:
      service-camunda:
        enable: true
        # 多个节点时用逗号隔开,格式： 地址,权重 | 地址,权重 | ...
        end-points: http://127.0.0.1:8099,1 | http://127.0.0.1:8099,1
      service-hrm:
        enable: true
        # 多个节点时用逗号隔开,格式： 地址,权重 | 地址,权重 | ...
        end-points: http://127.0.0.1:8089,1 | http://127.0.0.1:8089,1
      service-oauth:
        enable: true
        # 多个节点时用逗号隔开,格式： 地址,权重 | 地址,权重 | ...
        end-points: http://127.0.0.1:8089,1 | http://127.0.0.1:8089,1
  language:
    translator:
      enable: true
      # 配置是否加密，加密文件在 develop.encrypt 配置
      encrypt: true
      baidu:
        appId: oEXl3F7Mx4VZch8pcOZGRatfDPJIGqQrMFHEnN8aMH8=
        securityKey: TyrKCb6TgvTWU78ARppPs9dCs1VrZjGRYHqGIlkZ/14=


security:
  # 模式：session / jwt
  mode: both
  # 配置无需鉴权可以访问的地址
  # /service-storage/sys-file/upload/**,/service-storage/sys-file/image/** 移动端访问开放，后续修正
  ignored-urls: /business/eam/c_cust_repair_apply/c_cust_repair_apply_form_full_p.html,/service-eam/eam-c-cust-repair-apply/query-paged-list,/service-eam/eam-c-cust-repair-apply/get-by-id,/service-eam/eam-c-cust-repair-apply/insert,/business/eam/c_cust_repair_apply/c_cust_repair_apply_list_public.html,/business/eam/c_cust_repair_apply/c_cust_repair_apply_form_public.html,/share/public.html,/service-storage/sys-file/download,/business/ops/software_media/software_media_public_list.html,/service-ops/ops-software-media/query-paged-list,/service-ops/ops-information-system/query-paged-list,/business/ops/information_system/information_system_public_list.html,/service-ops/ops-host/query-paged-list,/**/host_public_list.html,/service-ops/ops-db-info/public-query-paged-list,/**/db_info_public_list.html,/service-ops/ops-db-info/public-query-paged-list,/**/db_info_public_list.html,/service-eam/eam-asset/user-login-data , /service-storage/sys-file/upload/** , /service-storage/sys-file/image/** ,   /public.html ,/share/public.html , /console/** , /assets/** , /pages/** , /*.ico ,/extmodule/** , /module/** ,  /**/*.css , /**/*.js , /error , /druid/**,/business/eam/user_book/**
  # mode=session 时配置的登录页面
  login-page: /login.html
  # 配置登录标识的范围与优先级,可选值在 LoginIdentityType 枚举中定义
  login-identity-priority: employee_badge,user_account,user_phone,user_id
  jwt:
    key-location: foxnic-web.jks
    key-alias: foxnic-web
    key-pass: fox-123456-nic
    # 缓存类型  local/remote/both
    cache-type: local
    iss: felord.cn
    sub: all
    # accessToken 超时秒数，1800秒 即 30分钟
    access-expire-seconds: 1800
    # refreshToken 超时秒数，3600秒 即 60分钟;28800 即 8小时
    refresh-expire-seconds: 28800
  build-in:
    # 是否显示内置账户
    display-user: true
    # 是否显示内置角色
    display-role: true
    # 是否显示内置业务角色
    display-busi-role: true

logging:
  config: classpath:logback-config.xml

snowflake:
  datacenterId: 1
  workerId: 1

management:
  endpoints:
    web:
      exposure:
        include: "*"

#自动扫描API
springfox:
  documentation:
    auto-startup: true

knife4j:
  enable: true
  title: ${spring.application.name}
  description: ${spring.application.description}
  version: 1.0
  setting:
    enableSwaggerModels: true
    swaggerModelName: EamModel



develop:
  #language: defaults
  start-relation-monitor: true
  deploy:
    enable: true
    # 可以使用以当前项目为基础的相对路径，指定静态资源自动部署的项目目录
    projects: ../view/view-wms,../view/view-oa,../view/view-workorder,../view/view-cms,../view/view-vehicle,../view/view-customer,../view/view-contract,../view/view-knowledgebase, ../view/view-common, ../view/view-console, ../view/view-datacenter, ../view/view-eam, ../view/view-hr, ../view/view-ops, ../view/view-mobile
  # 加密配置
  encrypt:
    file:
      windows: d:/foxnic/passwd.txt
      mac: /Users/Shared/foxnic/passwd.txt
      linux: /foxnic/passwd.txt
